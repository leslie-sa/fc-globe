var canvas,scene,renderer,data,list,container=document.getElementsByClassName("js-globe")[0],elements={},groups={main:null,globe:null,globeDots:null,lines:null,lineDots:null},props={mapSize:{width:1024,height:512},globeRadius:200,dotsAmount:20,startingCountry:"singapore",colours:{globeDots:"rgb(255, 255, 255)",lines:new THREE.Color("#18FFFF"),lineDots:new THREE.Color("#18FFFF")},alphas:{globe:.9,lines:.5}},camera={object:null,controls:null,angles:{current:{azimuthal:null,polar:null},target:{azimuthal:null,polar:null}}},animations={finishedIntro:!1,dots:{current:0,total:170,points:[]},globe:{current:0,total:80},countries:{active:!1,animating:!1,current:0,total:120,selected:null,index:null,timeout:null,initialDuration:5e3,duration:2e3}},isHidden=!1;function getData(){var e=new XMLHttpRequest;e.open("GET","https://s3-us-west-2.amazonaws.com/s.cdpn.io/617753/globe-points.json",!0),e.onload=function(){e.status>=200&&e.status<400?(data=JSON.parse(e.responseText),setupScene()):showFallback()},e.onerror=showFallback,e.send()}function showFallback(){alert("WebGL not supported. Please use a browser that supports WebGL.")}function setupScene(){canvas=container.getElementsByClassName("js-canvas")[0],scene=new THREE.Scene,(renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:!0,alpha:!0,shadowMapEnabled:!1})).setSize(canvas.clientWidth,canvas.clientHeight),renderer.setPixelRatio(1),renderer.setClearColor(0,0),groups.main=new THREE.Group,groups.main.name="Main",groups.lines=new THREE.Group,groups.lines.name="Lines",groups.main.add(groups.lines),groups.lineDots=new THREE.Group,groups.lineDots.name="Dots",groups.main.add(groups.lineDots),scene.add(groups.main),addCamera(),addControls(),addGlobe(),render(),animate();var e=function(){container.width=window.innerWidth,container.height=window.innerHeight,container.style.width=window.innerWidth+"px",container.style.height=window.innerHeight+"px",camera.object.aspect=container.offsetWidth/container.offsetHeight,camera.object.updateProjectionMatrix(),renderer.setSize(container.offsetWidth,container.offsetHeight)};window.addEventListener("resize",e),window.addEventListener("orientationchange",function(){setTimeout(e,0)}),e()}function addCamera(){camera.object=new THREE.PerspectiveCamera(60,canvas.clientWidth/canvas.clientHeight,1,1e4),camera.object.position.z=2.6*props.globeRadius}function addControls(){camera.controls=new OrbitControls(camera.object,canvas),camera.controls.enableKeys=!1,camera.controls.enablePan=!1,camera.controls.enableZoom=!1,camera.controls.enableDamping=!1,camera.controls.enableRotate=!1,camera.angles.current.azimuthal=-Math.PI,camera.angles.current.polar=180}function render(){renderer.render(scene,camera.object)}function onFocusChange(e){var n={focus:"visible",focusin:"visible",pageshow:"visible",blur:"hidden",focusout:"hidden",pagehide:"hidden"};e=e||window.event,isHidden=e.type in n}function animate(){!1===isHidden&&requestAnimationFrame(animate),groups.globeDots&&introAnimate(),!0===animations.finishedIntro&&animateDots(),!0===animations.countries.animating&&animateCountryCycle(),camera.controls.setAzimuthalAngle(-360*Math.cos(5e-7*Date.now())),camera.controls.setPolarAngle(1),camera.controls.update(),render()}function addGlobe(){(new THREE.TextureLoader).setCrossOrigin(!0);var e=props.globeRadius-.02*props.globeRadius,n=document.createElement("canvas");n.width=128,n.height=128;var t=n.getContext("2d");t.rect(0,0,128,128);var a=t.createLinearGradient(0,0,0,128);a.addColorStop(1,"rgba(0,0,0,0.02)"),a.addColorStop(1,"rgba(0,0,0,0.02)"),a.addColorStop(1,"rgba(0,0,0,0.02)"),t.fillStyle=a,t.fill();var o=new THREE.Texture(n);o.needsUpdate=!0;var i=new THREE.SphereGeometry(e,64,64),r=new THREE.MeshBasicMaterial({map:o,transparent:!0,opacity:0});globe=new THREE.Mesh(i,r),groups.globe=new THREE.Group,groups.globe.name="Globe",groups.globe.add(globe),groups.main.add(groups.globe),addGlobeDots()}function addGlobeDots(){var e=new THREE.Geometry,n=document.createElement("canvas");n.width=16,n.height=16;var t=n.getContext("2d");t.beginPath(),t.arc(8,8,8,0,2*Math.PI),t.fillStyle=props.colours.globeDots,t.fill();var a=new THREE.Texture(n);a.needsUpdate=!0;for(var o=new THREE.PointsMaterial({map:a,size:props.globeRadius/200}),i=function(n,t){var a=new THREE.Vector3(0,0,0);e.vertices.push(a);var o=returnSphericalCoordinates(n,t);animations.dots.points.push(new THREE.Vector3(o.x,o.y,o.z))},r=0;r<data.points.length;r++)i(data.points[r].x,data.points[r].y);for(var s in data.countries)i(data.countries[s].x,data.countries[s].y);groups.globeDots=new THREE.Points(e,o),groups.globe.add(groups.globeDots)}function addLineDots(){for(var e=props.globeRadius/120,n=new THREE.SphereGeometry(e,32,32),t=new THREE.MeshBasicMaterial({color:props.colours.lineDots}),a=0;a<props.dotsAmount;a++){var o=new THREE.Mesh(n,t);o.visible=!1,o._pathIndex=null,o._path=null,groups.lineDots.add(o)}}function assignDotsToRandomLine(e){var n=Math.random()*(animations.countries.selected.children.length-1);n=animations.countries.selected.children[n.toFixed(0)],e._path=n._path}function reassignDotsToNewLines(){for(var e=0;e<groups.lineDots.children.length;e++){var n=groups.lineDots.children[e];null!==n._path&&null!==n._pathIndex&&assignDotsToRandomLine(n)}}function animateDots(){for(var e=0;e<groups.lineDots.children.length;e++){var n=groups.lineDots.children[e];if(null===n._path)Math.random()>.99&&(assignDotsToRandomLine(n),n._pathIndex=0);else null!==n._path&&n._pathIndex<n._path.length-1?(!1===n.visible&&(n.visible=!0),n.position.x=n._path[n._pathIndex].x,n.position.y=n._path[n._pathIndex].y,n.position.z=n._path[n._pathIndex].z,n._pathIndex++):(n.visible=!1,n._path=null)}}function positionElements(){var e=canvas.clientWidth/2,n=canvas.clientHeight/2;for(var t in elements){var a=elements[t],o=getProjectedPosition(e,n,a.position),i=o.x+"px",r=o.y+"px",s=a.element.style;s.webkitTransform="translate3D("+i+", "+r+", 0)",s.WebkitTransform="translate3D("+i+", "+r+", 0)",s.mozTransform="translate3D("+i+", "+r+", 0)",s.msTransform="translate3D("+i+", "+r+", 0)",s.oTransform="translate3D("+i+", "+r+", 0)",s.transform="translate3D("+i+", "+r+", 0)"}}"hidden"in document?document.addEventListener("visibilitychange",onFocusChange):"mozHidden"in document?document.addEventListener("mozvisibilitychange",onFocusChange):"webkitHidden"in document?document.addEventListener("webkitvisibilitychange",onFocusChange):"msHidden"in document?document.addEventListener("msvisibilitychange",onFocusChange):"onfocusin"in document?document.onfocusin=document.onfocusout=onFocusChange:window.onpageshow=window.onpagehide=window.onfocus=window.onblur=onFocusChange;var easeInOutCubic=function(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},easeOutCubic=function(e){return--e*e*e+1},easeInOutQuad=function(e){return e<.5?2*e*e:(4-2*e)*e-1};function introAnimate(){if(animations.dots.current<=animations.dots.total){for(var e=groups.globeDots.geometry.vertices,n=e.length,t=0;t<n;t++){var a=easeInOutCubic(animations.dots.current/animations.dots.total);if((a+=a*(t/n))>1&&(a=1),e[t].x=animations.dots.points[t].x*a,e[t].y=animations.dots.points[t].y*a,e[t].z=animations.dots.points[t].z*a,0===t){var o=(camera.angles.current.azimuthal-camera.angles.target.azimuthal)*a;o=camera.angles.current.azimuthal-o,camera.controls.setAzimuthalAngle(o);var i=(camera.angles.current.polar-camera.angles.target.polar)*a;i=camera.angles.current.polar-i}}animations.dots.current++,groups.globeDots.geometry.verticesNeedUpdate=!0,document.querySelector(".svg-wrapper").classList.add("active")}if(animations.dots.current>=.65*animations.dots.total&&animations.globe.current<=animations.globe.total){var r=easeOutCubic(animations.globe.current/animations.globe.total);globe.material.opacity=props.alphas.globe*r,animations.globe.current++}!0===animations.countries.active&&!1===animations.finishedIntro&&(animations.finishedIntro=!0,animations.countries.timeout=setTimeout(showNextCountry,animations.countries.initialDuration),addLineDots())}function changeCountry(e,n){for(var t in void 0!==animations.countries.selected&&(animations.countries.selected.visible=!1),elements)t===e?elements[t].element.classList.add("active"):elements[t].element.classList.remove("active");if(animations.countries.selected=groups.lines.getObjectByName(e),animations.countries.selected.visible=!0,!0!==n){camera.angles.current.azimuthal=camera.controls.getAzimuthalAngle(),camera.angles.current.polar=camera.controls.getPolarAngle();var a=returnCameraAngles(data.countries[e].x,data.countries[e].y);camera.angles.target.azimuthal=a.azimuthal,camera.angles.target.polar=a.polar,animations.countries.animating=!0,reassignDotsToNewLines()}}function animateCountryCycle(){if(animations.countries.current<=animations.countries.total){var e=easeInOutQuad(animations.countries.current/animations.countries.total),n=(camera.angles.current.azimuthal-camera.angles.target.azimuthal)*e;n=camera.angles.current.azimuthal-n,camera.controls.setAzimuthalAngle(n);var t=(camera.angles.current.polar-camera.angles.target.polar)*e;t=camera.angles.current.polar-t,animations.countries.current++}else animations.countries.animating=!1,animations.countries.current=0,animations.countries.timeout=setTimeout(showNextCountry,animations.countries.duration)}function showNextCountry(){animations.countries.index++,animations.countries.index>=Object.keys(data.countries).length&&(animations.countries.index=0),changeCountry(Object.keys(data.countries)[animations.countries.index],!1)}function returnSphericalCoordinates(e,n){e=(e-props.mapSize.width)/props.mapSize.width*-180,n=(n-props.mapSize.height)/props.mapSize.height*-90;var t=Math.cos(n/180*Math.PI)*props.globeRadius;return{x:Math.cos(e/180*Math.PI)*t,y:Math.sin(n/180*Math.PI)*props.globeRadius,z:Math.sin(e/180*Math.PI)*t}}function returnCurveCoordinates(e,n,t,a){var o=returnSphericalCoordinates(e,n),i=returnSphericalCoordinates(t,a),r=(o.x+i.x)/2,s=(o.y+i.y)/2,l=(o.z+i.z)/2,c=Math.pow(i.x-o.x,2);c+=Math.pow(i.y-o.y,2),c+=Math.pow(i.z-o.z,2),c=Math.sqrt(c);var u=Math.pow(r,2);u+=Math.pow(s,2),u+=Math.pow(l,2),u=Math.pow(c,2)/u;var d=r+(u*=.7)*r,m=s+u*s,p=l+u*l;return{start:{x:o.x,y:o.y,z:o.z},mid:{x:d,y:m,z:p},end:{x:i.x,y:i.y,z:i.z}}}function getProjectedPosition(e,n,t){var a=(t=t.clone()).project(camera.object);return{x:a.x*e+e,y:-a.y*n+n}}function returnCameraAngles(e,n){var t=(e-props.mapSize.width)/props.mapSize.width*Math.PI;return t+=Math.PI/2,{azimuthal:t+=.1,polar:n/(2*props.mapSize.height)*Math.PI}}window.WebGLRenderingContext?getData():showFallback();
